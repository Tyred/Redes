#!/usr/bin/env python3
import asyncio
from tcp import Servidor
import re

def validar_nome(nome):
    return re.match(br'^[a-zA-Z][a-zA-Z0-9_-]*$', nome) is not None


def sair(conexao):
    print(conexao, 'conexão fechada')
    conexao.fechar()


def dados_recebidos(conexao, dados):
    if dados == b'':
        return sair(conexao)
    
    conexao.dados_residuais += dados
    

    if conexao.dados_residuais.find(b'\n') != -1:
        comandos = conexao.dados_residuais.splitlines(True)
        conexao.dados_residuais = b''

        for comando in comandos:
            if comando.find(b'\n') != -1:
                comando_splitado = comando.split(b' ')
                
                if comando_splitado[0] == b'PING':
                    conexao.enviar(b':server PONG server :' + comando_splitado[1])
                
                if comando_splitado[0] == b'NICK':
                    nick = comando_splitado[1].rstrip()
                    if validar_nome(nick):
                        conexao.enviar(b':server 001 ' + nick + b' :Welcome\r\n')
                        conexao.enviar(b':server 422 ' + nick + b' :MOTD File is missing\r\n')
                    else:
                        conexao.enviar(b':server 432 * ' + nick + b' :Erroneous nickname\r\n')
                    
            else:                 
                conexao.dados_residuais += comando
                
    print(conexao, dados)

def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
    conexao.registrar_recebedor(dados_recebidos)


servidor = Servidor(6667)
servidor.registrar_monitor_de_conexoes_aceitas(conexao_aceita)
asyncio.get_event_loop().run_forever()

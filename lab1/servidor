#!/usr/bin/env python3
import asyncio
from tcp import Servidor
import re

def validar_nome(nome):
    return re.match(br'^[a-zA-Z][a-zA-Z0-9_-]*$', nome) is not None


def sair(conexao):
    print(conexao, 'conexão fechada')
    conexao.fechar()

apelido_dict = {}
def dados_recebidos(conexao, dados):
    if dados == b'':
        return sair(conexao)
    
    conexao.dados_residuais += dados
    
    if conexao.dados_residuais.find(b'\n') != -1:
        comandos = conexao.dados_residuais.splitlines(True)
        conexao.dados_residuais = b''

        for comando in comandos:
            if comando.find(b'\n') != -1:
                comando_splitado = comando.split(b' ')
                
                if comando_splitado[0] == b'PING':
                    conexao.enviar(b':server PONG server :' + comando_splitado[1])
                
                if comando_splitado[0] == b'NICK':
                    apelido = comando_splitado[1].rstrip()

                    if validar_nome(apelido):
                        if apelido.lower() not in apelido_dict:
                            apelido_dict[apelido.lower()] = conexao
                            if conexao.apelido == b'*':
                                conexao.enviar(b':server 001 %s :Welcome\r\n' % apelido)
                                conexao.enviar(b':server 422 %s :MOTD File is missing\r\n' % apelido)
                            else:
                                del apelido_dict[conexao.apelido]
                                conexao.enviar(b':%s NICK %s\r\n' % (conexao.apelido, apelido))
                            conexao.apelido = apelido

                        else:
                            conexao.enviar(b':server 433 %s %s :Nickname is already in use\r\n' % (conexao.apelido, apelido))
                    else:
                        conexao.enviar(b':server 432 * ' + apelido + b' :Erroneous nickname\r\n')
                
                if comando_splitado[0] == b'PRIVMSG':
                    destinatario = comando_splitado[1]
                    
                    if destinatario.lower() != conexao.apelido.lower() and destinatario.lower() in apelido_dict \
                       and comando.find(b':') != -1:
                        conteudo = comando.split(b':', 1)[1]
                        conexao_destino = apelido_dict[destinatario.lower()]
                        conexao_destino.enviar(b':%s PRIVMSG %s :%s' % (conexao.apelido, destinatario, conteudo))

            else:
                conexao.dados_residuais += comando
                
    print(conexao, dados)

def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
    conexao.dados_residuais = b''
    conexao.apelido = b'*'
    conexao.registrar_recebedor(dados_recebidos)


servidor = Servidor(6667)
servidor.registrar_monitor_de_conexoes_aceitas(conexao_aceita)
asyncio.get_event_loop().run_forever()
